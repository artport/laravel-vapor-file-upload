{"version":3,"file":"laravel-vapor-file-upload.min.js","sources":["../src/laravel-vapor-file-upload.js"],"sourcesContent":["class Vapor\n{\n    /**\n     * Retrieve a signed storage link to upload with.\n     *\n     */\n    static async requestSignedUrl(file, options = {})\n    {\n        return JSON.parse(await function() {\n            return new Promise(function(resolve) {\n                let request = new XMLHttpRequest();\n\n                request.open('POST', '/vapor/signed-storage-url');\n                request.onload = () => resolve(request.response);\n\n                request.setRequestHeader('Content-Type', 'application/json');\n                request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n                request.setRequestHeader('X-CSRF-TOKEN', document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content'));\n\n                request.send(JSON.stringify({\n                    bucket       : options.bucket || '',\n                    content_type : options.contentType || file.type,\n                    expires      : options.expires || '',\n                    visibility   : options.visibility || 'public-read',\n                }));\n            });\n        }());\n    }\n\n    /**\n     * Send the given file using the given signed storage url.\n     *\n     */\n    static async sendFile(url, file, options = {}, headers = {})\n    {\n        return await function() {\n            return new Promise(function(resolve) {\n                let request = new XMLHttpRequest();\n\n                request.open('PUT', url);\n                request.onload = () => resolve(request.response);\n\n                if (options.progress) {\n                    request.upload.onprogress = (e) => options.progress(\n                        Math.ceil((e.loaded / e.total) * 100)\n                    );\n                }\n\n                for (const header in headers) {\n                    request.setRequestHeader(header, headers[header]);\n                }\n\n                request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n                request.setRequestHeader('X-CSRF-TOKEN', document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content'));\n                request.setRequestHeader('Content-Type', options.contentType || file.type);\n\n                request.send(file);\n            });\n        }();\n    }\n\n    /**\n     * Store a file in S3 and return its UUID, key, and other information.\n     *\n     */\n    static async store(file, options = {})\n    {\n        let response = await this.requestSignedUrl(file, options);\n\n        if ('Host' in response.headers) delete response.headers['Host'];\n        if ('Content-Type' in response.headers) delete response.headers['Content-Type'];\n\n        await this.sendFile(response.url, file, options, response.headers);\n\n        if (file.name) response.extension = file.name.split('.').pop();\n\n        return response;\n    }\n}\n\nwindow.Vapor = Vapor;"],"names":["window","Vapor","requestSignedUrl","file","options","Promise","resolve","request","XMLHttpRequest","open","onload","response","setRequestHeader","document","querySelector","getAttribute","send","JSON","stringify","bucket","content_type","contentType","type","expires","visibility","then","parse","e","reject","sendFile","url","headers","header","progress","upload","onprogress","Math","ceil","loaded","total","store","_this","this","name","extension","split","pop"],"mappings":"AAgFAA,OAAOC,mBAhFIA,WAAAA,SAAAA,IAAAA,CA6EN,OA7EMA,EAMMC,iBAAgBA,SAACC,EAAMC,QAAO,IAAPA,IAAAA,EAAU,IAC9C,IAAA,OAAAC,QAAAC,QAEe,IAAID,QAAQ,SAASC,GACxB,IAAIC,EAAU,IAAIC,eAElBD,EAAQE,KAAK,OAAQ,6BACrBF,EAAQG,OAAS,WAAM,OAAAJ,EAAQC,EAAQI,SAAS,EAEhDJ,EAAQK,iBAAiB,eAAgB,oBACzCL,EAAQK,iBAAiB,mBAAoB,kBAC7CL,EAAQK,iBAAiB,eAAgBC,SAASC,cAAc,2BAA2BC,aAAa,YAExGR,EAAQS,KAAKC,KAAKC,UAAU,CACxBC,OAAef,EAAQe,QAAU,GACjCC,aAAehB,EAAQiB,aAAelB,EAAKmB,KAC3CC,QAAenB,EAAQmB,SAAW,GAClCC,WAAepB,EAAQoB,YAAc,gBAE7C,IAAEC,KAjBCR,KAAKS,MAmBhB,CAAC,MAAAC,GAAA,OAAAtB,QAAAuB,OAAAD,EAAA,CAAA,EAAA1B,EAMY4B,SAAQ,SAACC,EAAK3B,EAAMC,EAAc2B,QAAd3B,IAAAA,IAAAA,EAAU,CAAA,QAAI2B,IAAAA,IAAAA,EAAU,IAAE,IAC3D1B,OAAAA,QAAAC,QAEe,IAAID,QAAQ,SAASC,GACxB,IAAIC,EAAU,IAAIC,eAWlB,IAAK,IAAMwB,KATXzB,EAAQE,KAAK,MAAOqB,GACpBvB,EAAQG,OAAS,WAAA,OAAMJ,EAAQC,EAAQI,SAAS,EAE5CP,EAAQ6B,WACR1B,EAAQ2B,OAAOC,WAAa,SAACR,GAAC,OAAKvB,EAAQ6B,SACvCG,KAAKC,KAAMV,EAAEW,OAASX,EAAEY,MAAS,KACpC,GAGgBR,EACjBxB,EAAQK,iBAAiBoB,EAAQD,EAAQC,IAG7CzB,EAAQK,iBAAiB,mBAAoB,kBAC7CL,EAAQK,iBAAiB,eAAgBC,SAASC,cAAc,2BAA2BC,aAAa,YACxGR,EAAQK,iBAAiB,eAAgBR,EAAQiB,aAAelB,EAAKmB,MAErEf,EAAQS,KAAKb,EACjB,GAER,CAAC,MAAAwB,GAAA,OAAAtB,QAAAuB,OAAAD,EAAA,CAAA,EAAA1B,EAMYuC,MAAK,SAACrC,EAAMC,QAAAA,IAAAA,IAAAA,EAAU,CAAE,GAAA,QACrCqC,EACyBC,KAAI,OAAArC,QAAAC,QAAJmC,EAAKvC,iBAAiBC,EAAMC,IAAQqB,KAArDd,SAAAA,GAG4E,MAD5E,SAAUA,EAASoB,gBAAgBpB,EAASoB,QAAc,KAC1D,iBAAkBpB,EAASoB,gBAAgBpB,EAASoB,QAAQ,gBAAgB1B,QAAAC,QAE1EmC,EAAKZ,SAASlB,EAASmB,IAAK3B,EAAMC,EAASO,EAASoB,UAAQN,KAElE,WAEA,OAFItB,EAAKwC,OAAMhC,EAASiC,UAAYzC,EAAKwC,KAAKE,MAAM,KAAKC,OAElDnC,CAAS,EAAA,EACpB,CAAC,MAAAgB,GAAA,OAAAtB,QAAAuB,OAAAD,EAAA,CAAA,EAAA1B,CAAA,CA7EMA"}